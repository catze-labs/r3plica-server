// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  playFabId     String   @id
  email         String   @unique
  walletAddress String?
  created       DateTime @default(now()) @db.DateTime(6)
  updated       DateTime @default(now()) @updatedAt @db.DateTime(6)

  profileMint          profileMint[]
  profileTransfer      profileTransfer[]
  itemTransfers        itemTransfer[]
  entitlementTransfers entitlementTransfer[]
  profileToken         profileToken?
  itemTokens           itemToken[]
  entitlementTokens    entitlementToken[]
}

model nonce {
  id      Int      @id @default(autoincrement())
  created DateTime @default(now()) @db.DateTime(6)
  updated DateTime @default(now()) @updatedAt @db.DateTime(6)
  address String
  value   String
  used    Boolean  @default(false)

  @@index([address])
}

model latestBlock {
  number  Int      @id
  created DateTime @default(now()) @db.DateTime(6)
  updated DateTime @default(now()) @updatedAt @db.DateTime(6)
}

model profileMint {
  id              Int      @id @default(autoincrement())
  txHash          String
  txStatus        Boolean?
  playFabId       String
  tokenId         String?
  contractAddress String
  user            user     @relation(fields: [playFabId], references: [playFabId])
  created         DateTime @default(now()) @db.DateTime(6)
  updated         DateTime @default(now()) @updatedAt @db.DateTime(6)
}

model profileTransfer {
  id              Int      @id @default(autoincrement())
  txHash          String
  txStatus        Boolean?
  playFabId       String
  contractAddress String
  user            user     @relation(fields: [playFabId], references: [playFabId])
  created         DateTime @default(now()) @db.DateTime(6)
  updated         DateTime @default(now()) @updatedAt @db.DateTime(6)
}

model itemTransfer {
  id              Int      @id @default(autoincrement())
  txHash          String
  txStatus        Boolean?
  itemId          Int
  playFabId       String
  tokenId         String?
  contractAddress String
  user            user     @relation(fields: [playFabId], references: [playFabId])
  created         DateTime @default(now()) @db.DateTime(6)
  updated         DateTime @default(now()) @updatedAt @db.DateTime(6)
}

model entitlementTransfer {
  id              Int      @id @default(autoincrement())
  txHash          String
  txStatus        Boolean?
  entitlementId   Int
  playFabId       String
  tokenId         String?
  contractAddress String
  user            user     @relation(fields: [playFabId], references: [playFabId])
  created         DateTime @default(now()) @db.DateTime(6)
  updated         DateTime @default(now()) @updatedAt @db.DateTime(6)
}

model itemToken {
  tokenId         String   @id
  itemId          Int
  contractAddress String
  playFabId       String?
  user            user?    @relation(fields: [playFabId], references: [playFabId])
  created         DateTime @default(now()) @db.DateTime(6)
  updated         DateTime @default(now()) @updatedAt @db.DateTime(6)
}

model entitlementToken {
  tokenId         String   @id
  entitlementId   Int
  contractAddress String
  playFabId       String?
  user            user?    @relation(fields: [playFabId], references: [playFabId])
  created         DateTime @default(now()) @db.DateTime(6)
  updated         DateTime @default(now()) @updatedAt @db.DateTime(6)
}

model profileToken {
  tokenId         String   @id
  txHash          String
  txStatus        Boolean?
  contractAddress String
  playFabId       String   @unique
  user            user     @relation(fields: [playFabId], references: [playFabId])
  created         DateTime @default(now()) @db.DateTime(6)
  updated         DateTime @default(now()) @updatedAt @db.DateTime(6)
}
